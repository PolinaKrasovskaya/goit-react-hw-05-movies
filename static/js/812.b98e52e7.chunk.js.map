{"version":3,"file":"static/js/812.b98e52e7.chunk.js","mappings":"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","sources":["components/Loader.jsx","pages/Cast/Cast.jsx","pages/Cast/Cast.styled.js","pages/HomePage/HomePage.jsx","pages/HomePage/HomePage.style.js","pages/MovieDetailsPage/MovieDetailsPage.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MoviesPage/MoviesPage.jsx","pages/MoviesPage/MoviesPage.styled.js","pages/Reviews/Reviews.jsx","pages/Reviews/Reviews.styled.js","services/movies-api.js"],"sourcesContent":["export const Loader = () => {\r\n    return <div>Loading...</div>;\r\n}","import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getCast } from 'services/movies-api';\r\nimport { List, Item, Image, Header, Text, Name } from './Cast.styled';\r\nimport { Loader } from 'components/Loader';\r\nimport defaultImg from 'images/default.png';\r\n\r\nexport const Cast = () => {\r\n    const { movieId } = useParams();\r\n    const [actors, setActors] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchCast() {\r\n            try {\r\n                const response= await getCast(movieId);\r\n                setActors(response);\r\n                setLoading(true);\r\n            } catch (error) {\r\n                console.log('Error!')\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n        fetchCast()\r\n    }, [movieId])\r\n\r\n    console.log(actors);\r\n\r\n    return (\r\n        <List>\r\n            {loading && <Loader/> }\r\n            {actors.map(actor =>\r\n                <Item key={actor.id}>\r\n                    <Image src={actor.profile_path\r\n                        ? 'https://image.tmdb.org/t/p/w500/' + actor.profile_path\r\n                        : defaultImg\r\n                        }\r\n                        alt={actor.name}\r\n                        onerror=\"this.src='images/default.png\"\r\n                    />\r\n                    <Name>{actor.name}</Name>\r\n                    <Text><Header>Character: </Header>{actor.character}</Text>\r\n                </Item>\r\n            )}\r\n        </List>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    width: 150px;\r\n    margin-right: 20px;\r\n    margin-top: 20px;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    width: 150px;\r\n    height: auto;\r\n`;\r\n\r\nexport const Name = styled.h2`\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    color: #490936;\r\n`;\r\n\r\nexport const Header = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #010501;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: #010501;\r\n`;\r\n\r\n","import { useEffect, useState } from \"react\";\r\nimport { getTrendingMovies } from \"services/movies-api\";\r\nimport { Loader } from \"components/Loader\";\r\nimport { Header, List, Link, Item } from './HomePage.style';\r\n\r\nconst useFetchTrandingMovies = () => {\r\n    const [items, setItems] = useState([])\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchTrandingMovies () {\r\n            setLoading(true);\r\n            try {\r\n                const items = await getTrendingMovies()\r\n                setItems(items)\r\n            } catch (error) {\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n        fetchTrandingMovies();\r\n    }, []);\r\n\r\n    return { items, loading };\r\n}\r\n\r\nexport const HomePage = () => {\r\n    const { items, loading } = useFetchTrandingMovies();\r\n\r\n    return (\r\n        <main>\r\n            <Header>Trending today</Header>\r\n            {loading && <Loader />}\r\n            <List>\r\n                {items.map(item =>\r\n                    <Item key={item.id}>\r\n                        <Link to={`/movies/${item.id}`}>{item.title}</Link>\r\n                    </Item>\r\n                )}\r\n            </List>\r\n        </main>\r\n    );\r\n}","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Header = styled.h1`\r\n    font-size: 34px;\r\n    text-transform: uppercase;\r\n    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    line-height: 1.71;\r\n    letter-spacing: 0.03em;\r\n    font-weight: 900;\r\n    color: #490936;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    padding: 0;\r\n    list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    line-height: 1.6;\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n    color: #010501;\r\n    font-weight: 700;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n        color: #9a5a87;\r\n        text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n    }\r\n`;","import { useState, useEffect } from \"react\";\r\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\r\nimport { getMovie } from \"services/movies-api\";\r\nimport { Article, Image, Description, ItemTitle,\r\n        Header, Text, TextGenres, Navigation, Additional, Link \r\n        } from './MovieDetailsPage.styled';\r\n\r\nexport const MovieDetailsPage = () => {\r\n    const { movieId } = useParams();\r\n    const [item, setItem ] = useState(null);\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        async function fetchMovie() {\r\n            try {\r\n                const item = await getMovie(movieId);\r\n                setItem(item)\r\n            } catch (error) {}\r\n        }\r\n        fetchMovie();\r\n    }, [movieId]);\r\n\r\n    return (\r\n        <main>\r\n            <Link to={location?.state?.from ?? '/'}>Go back</Link>\r\n            {item && \r\n                <Article>\r\n                    <Image \r\n                        src={'https://image.tmdb.org/t/p/w500/' + item.poster_path}\r\n                        alt={item.title}\r\n                    />\r\n                    <Description>\r\n                        <ItemTitle>{item.title} ({item.release_date.substr(0, 4)})</ItemTitle>\r\n                        <Text>User Score: {item.vote_average * 10}%</Text>\r\n                        <Header>Overview</Header>\r\n                        <Text>{item.overview}</Text>\r\n                        <Header>Genres</Header>\r\n                        {item.genres.map(genre => (\r\n                            <TextGenres key={genre.id}>{genre.name}<br/></TextGenres>\r\n                        ))}\r\n                    </Description>\r\n                </Article>\r\n            }\r\n\r\n            <Navigation>\r\n                <Additional>Additional information</Additional>\r\n                <Link to='cast'>Cast</Link>\r\n                <Link to='reviews'>Reviews</Link>\r\n            </Navigation>\r\n            <Outlet />\r\n        </main>\r\n    )\r\n}","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  margin-top: 50px;\r\n  padding: 0;\r\n  width: 70px;\r\n  height: 25px;\r\n  border: 1px solid #490936;\r\n  border-radius: 4px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  align-items: center;\r\n  text-align: center;\r\n  color: #490936;\r\n  text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.55);\r\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.55);\r\n\r\n  &:hover {\r\n    color: #f0e4ec;\r\n    background-color: #490936;\r\n  }\r\n`;\r\n\r\nexport const Article = styled.article`\r\n    display: flex;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    margin-top: 20px;\r\n    max-width: 300px;\r\n    height: fit-content;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n    margin-left: 20px;\r\n`;\r\n\r\nexport const ItemTitle = styled.h2`\r\n  font-size: 26px;\r\n  font-weight: 700;\r\n  color: #490936;\r\n`;\r\n\r\nexport const Header = styled.h3`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: #490936;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #010501;\r\n`;\r\n\r\nexport const TextGenres = styled.span`\r\n  margin: 0;\r\n  margin-top: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #010501;\r\n`;\r\n\r\nexport const Navigation = styled.span`\r\n  margin-top: 25px;\r\n  display: block;\r\n`;\r\n\r\nexport const Additional = styled.h3`\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  color: #490936;\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  margin-right: 20px;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n  font-weight: 700; \r\n  color: #010501;;\r\n  text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\r\n  &:hover,\r\n  &.active {\r\n    color: #7b205f;\r\n    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.55);\r\n  }\r\n`;","import { getSearchMovie } from 'services/movies-api';\r\nimport { useEffect, useState } from 'react'\r\nimport { useSearchParams, useLocation } from 'react-router-dom';\r\nimport { Form, Input, Button, List, Link, Item } from './MoviesPage.styled';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nexport const MoviesPage = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [movies, setMovies] = useState(null)\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const query = searchParams.get('query');\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (!query) {\r\n            return;\r\n        }\r\n\r\n        async function fetchSearchMovie() {\r\n            try {\r\n                const response = await getSearchMovie(query);\r\n                setMovies(response);\r\n            } catch(error) {\r\n                return toast({error});\r\n            }\r\n        }\r\n        fetchSearchMovie();\r\n        return\r\n    }, [query])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();        \r\n    \r\n        if (search.trim() === '') {\r\n            return toast.error(\"Search field can't be empty!\");\r\n        }\r\n        setSearchParams({ query: search });\r\n        setSearch('')\r\n        // e.currentTarget.reset();\r\n    }\r\n    \r\n    const handleChange = event => {\r\n        const searchQuery = event.currentTarget.value.toLowerCase();\r\n        setSearch(searchQuery);       \r\n    };\r\n\r\n    return (\r\n        <main>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Input onChange={handleChange} value={search} type=\"text\"></Input>\r\n            <Button type=\"submit\">Search</Button>\r\n            <Toaster />\r\n        </Form>\r\n\r\n        {movies && (\r\n            <>\r\n                {movies && (\r\n                    <List>\r\n                        {movies.map(movie => (\r\n                            <Item key={movie.id}>\r\n                                <Link to={`${movie.id}`} state={{ from: location}}>{movie.title}</Link>\r\n                            </Item>\r\n                        ))}\r\n                    </List>\r\n                \r\n                )}\r\n            </>\r\n        )}\r\n        </main>\r\n    );\r\n}\r\n\r\n\r\n\r\n// import { getSearchMovie } from 'services/movies-api';\r\n// import { useEffect, useState } from 'react'\r\n// import { useSearchParams, useLocation } from 'react-router-dom';\r\n// import { Form, Input, Button, List, Link, Item } from './MoviesPage.styled';\r\n// import toast, { Toaster } from 'react-hot-toast';\r\n\r\n// export const MoviesPage = () => {\r\n//     const [movies, setMovies] = useState([])\r\n//     const [searchParams, setSearchParams] = useSearchParams('');\r\n//     const query = searchParams.get('query');\r\n//     const location = useLocation();\r\n\r\n//     useEffect(() => {\r\n//         if (query === null || query === \"\") {\r\n//             return;\r\n//         }\r\n\r\n//         async function fetchSearchMovie() {\r\n//             try {\r\n//                 const response = await getSearchMovie(query);\r\n//                 setMovies(response);\r\n//             } catch(error) {\r\n//                 console.log('Error');\r\n//             }\r\n//         }\r\n//         fetchSearchMovie();\r\n\r\n//     }, [query])\r\n\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();        \r\n    \r\n//         if (query === '') {\r\n//             return toast.error(\"Search field can't be empty!\");\r\n//         }\r\n//         setSearchParams({ query: e.currentTarget.elements.query.value.trim() });\r\n//         e.currentTarget.reset();;\r\n//     }\r\n    \r\n//     return (\r\n//         <main>\r\n//         <Form onSubmit={handleSubmit}>\r\n//             <Input type=\"text\" name=\"query\"></Input>\r\n//             <Button type=\"submit\">Search</Button>\r\n//             <Toaster />\r\n//         </Form>\r\n\r\n//         {movies && query && (\r\n//             <>\r\n//                 {movies && query && (\r\n//                     <List>\r\n//                         {movies.map(movie => (\r\n//                             <Item key={movie.id}>\r\n//                                 <Link to={`${movie.id}`} state={{ from: location}}>{movie.title}</Link>\r\n//                             </Item>\r\n//                         ))}\r\n//                     </List>\r\n                \r\n//                 )}\r\n//             </>\r\n//         )}\r\n//         </main>\r\n//     );\r\n// }","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Form = styled.form`\r\n    margin-top: 50px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    margin-right: 20px;\r\n    width: 300px;\r\n    height: 30px;\r\n    border: 1px solid #490936;\r\n    border-radius: 4px;\r\n    background-color: #f5f2f4;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 0;\r\n    width: 70px;\r\n    height: 32px;\r\n    border: 1px solid #490936;\r\n    border-radius: 4px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    align-items: center;\r\n    text-align: center;\r\n    color: #490936;\r\n    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.45);\r\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\r\n    &:hover {\r\n    color: #f0e4ec;\r\n    background-color: #490936;\r\n    }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    margin-top: 50px;\r\n    padding: 0;\r\n    list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    line-height: 1.6;\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n    color: #010501;\r\n    font-weight: 700;\r\n    text-decoration: none;\r\n\r\n    &:hover,\r\n    &:focus {\r\n        color: #9a5a87;\r\n        text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n    }\r\n`;","import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getReviews } from 'services/movies-api';\r\nimport { List, Item, Header, Text } from './Reviews.styled';\r\n\r\nexport const Reviews = () => {\r\n    const { movieId } = useParams();\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchReviews() {\r\n            try {\r\n                const response= await getReviews(movieId);\r\n                setReviews(response);\r\n            } catch (error) {\r\n                console.log('Error!')\r\n            }\r\n        }\r\n        fetchReviews()\r\n    }, [movieId])\r\n\r\n    console.log(reviews);\r\n\r\n    return (\r\n        <List>\r\n            {reviews.map(review =>\r\n                <Item key={review.id}>\r\n                    <Header>Author: {review.author}</Header>\r\n                    <Text>{review.content}</Text>\r\n                </Item>\r\n            )}\r\n        </List>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n    margin-top: 20px;\r\n    padding: 0;\r\n    list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport const Header = styled.p`\r\nmargin: 0;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: #490936;\r\n`;\r\n\r\nexport const Text = styled.p`\r\nmargin-top: 10px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: #010501;\r\n`;","import axios from 'axios';\r\n\r\nconst api_key = 'cd0301e8d36e75459e8f6b3abbc4f987';\r\nconst URL = 'https://api.themoviedb.org/3';\r\n\r\nconst api = axios.create({ baseURL: URL, params: { api_key } });\r\n\r\nexport async function getTrendingMovies() {\r\n  const response = await api.get('/trending/movie/day');\r\n  return response.data.results;\r\n}\r\n\r\nexport const getMovie = async id => {\r\n  const response = await api.get(`/movie/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getSearchMovie = async query => {\r\n  const response = await api.get(`search/movie?query=${query}`);\r\n  return response.data.results\r\n};\r\n\r\nexport const getCast = async id => {\r\n  const response = await api.get(`movie/${id}/credits`);\r\n  return response.data.cast;\r\n};\r\n\r\nexport const getReviews = async id => {\r\n  const response = await api.get(`movie/${id}/reviews`);\r\n  return response.data.results;\r\n};"],"names":["Loader","Cast","movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","getCast","response","console","log","fetchCast","List","map","actor","Item","Image","src","profile_path","defaultImg","alt","name","onerror","Name","Text","Header","character","id","styled","HomePage","items","setItems","getTrendingMovies","fetchTrandingMovies","useFetchTrandingMovies","item","Link","to","title","NavLink","MovieDetailsPage","setItem","location","useLocation","getMovie","fetchMovie","state","from","Article","poster_path","Description","ItemTitle","release_date","substr","vote_average","overview","genres","genre","TextGenres","Navigation","Additional","Button","MoviesPage","search","setSearch","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","getSearchMovie","toast","error","fetchSearchMovie","Form","onSubmit","e","preventDefault","trim","Input","onChange","event","searchQuery","currentTarget","value","toLowerCase","type","movie","Reviews","reviews","setReviews","getReviews","fetchReviews","review","author","content","api","axios","baseURL","params","api_key","data","results","cast"],"sourceRoot":""}