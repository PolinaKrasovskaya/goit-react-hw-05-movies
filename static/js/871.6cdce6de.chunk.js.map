{"version":3,"file":"static/js/871.6cdce6de.chunk.js","mappings":"mRAKaA,EAAU,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE8BC,EAAAA,EAAAA,IAAWN,GAFzC,OAEcO,EAFd,OAGQH,EAAWG,GAHnB,gDAKQC,QAAQC,IAAI,UALpB,0DADY,uBAAC,WAAD,wBASZC,KACD,CAACV,IAEJQ,QAAQC,IAAIN,IAGR,SAAC,EAAAQ,KAAD,UACKR,EAAQS,KAAI,SAAAC,GAAM,OACf,UAAC,EAAAC,KAAD,YACI,UAAC,EAAAC,OAAD,sBAAiBF,EAAOG,WACxB,SAAC,EAAAC,KAAD,UAAOJ,EAAOK,YAFPL,EAAOM,W,8KCxBrBR,EAAOS,EAAAA,GAAAA,GAAH,uFAMJN,EAAOM,EAAAA,GAAAA,GAAH,+CAIJL,EAASK,EAAAA,GAAAA,EAAH,sGAONH,EAAOG,EAAAA,GAAAA,EAAH,8G,iMCdXC,E,MAAMC,GAAAA,OAAa,CAAEC,QAFf,+BAE6BC,OAAQ,CAAEC,QAHnC,sCAKT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBL,EAAIM,IAAI,uBAD1B,cACCpB,EADD,yBAEEA,EAASqB,KAAKC,SAFhB,kEAKA,IAAMC,EAAQ,mCAAG,WAAMX,GAAN,uFACCE,EAAIM,IAAJ,iBAAkBR,IADnB,cAChBZ,EADgB,yBAEfA,EAASqB,MAFM,2CAAH,sDAKRG,EAAc,mCAAG,WAAMC,GAAN,uFACLX,EAAIM,IAAJ,6BAA8BK,IADzB,cACtBzB,EADsB,yBAErBA,EAASqB,KAAKC,SAFO,2CAAH,sDAKdI,EAAO,mCAAG,WAAMd,GAAN,uFACEE,EAAIM,IAAJ,gBAAiBR,EAAjB,aADF,cACfZ,EADe,yBAEdA,EAASqB,KAAKM,MAFA,2CAAH,sDAKP5B,EAAU,mCAAG,WAAMa,GAAN,uFACDE,EAAIM,IAAJ,gBAAiBR,EAAjB,aADC,cAClBZ,EADkB,yBAEjBA,EAASqB,KAAKC,SAFG,2CAAH","sources":["pages/Reviews/Reviews.jsx","pages/Reviews/Reviews.styled.js","services/movies-api.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getReviews } from 'services/movies-api';\r\nimport { List, Item, Header, Text } from './Reviews.styled';\r\n\r\nexport const Reviews = () => {\r\n    const { movieId } = useParams();\r\n    const [reviews, setReviews] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchReviews() {\r\n            try {\r\n                const response= await getReviews(movieId);\r\n                setReviews(response);\r\n            } catch (error) {\r\n                console.log('Error!')\r\n            }\r\n        }\r\n        fetchReviews()\r\n    }, [movieId])\r\n\r\n    console.log(reviews);\r\n\r\n    return (\r\n        <List>\r\n            {reviews.map(review =>\r\n                <Item key={review.id}>\r\n                    <Header>Author: {review.author}</Header>\r\n                    <Text>{review.content}</Text>\r\n                </Item>\r\n            )}\r\n        </List>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n    margin-top: 20px;\r\n    padding: 0;\r\n    list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport const Header = styled.p`\r\nmargin: 0;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: #490936;\r\n`;\r\n\r\nexport const Text = styled.p`\r\nmargin-top: 10px;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: #010501;\r\n`;","import axios from 'axios';\r\n\r\nconst api_key = 'cd0301e8d36e75459e8f6b3abbc4f987';\r\nconst URL = 'https://api.themoviedb.org/3';\r\n\r\nconst api = axios.create({ baseURL: URL, params: { api_key } });\r\n\r\nexport async function getTrendingMovies() {\r\n  const response = await api.get('/trending/movie/day');\r\n  return response.data.results;\r\n}\r\n\r\nexport const getMovie = async id => {\r\n  const response = await api.get(`/movie/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getSearchMovie = async query => {\r\n  const response = await api.get(`search/movie?query=${query}`);\r\n  return response.data.results\r\n};\r\n\r\nexport const getCast = async id => {\r\n  const response = await api.get(`movie/${id}/credits`);\r\n  return response.data.cast;\r\n};\r\n\r\nexport const getReviews = async id => {\r\n  const response = await api.get(`movie/${id}/reviews`);\r\n  return response.data.results;\r\n};"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","getReviews","response","console","log","fetchReviews","List","map","review","Item","Header","author","Text","content","id","styled","api","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","getMovie","getSearchMovie","query","getCast","cast"],"sourceRoot":""}