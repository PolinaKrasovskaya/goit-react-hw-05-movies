{"version":3,"file":"static/js/290.eb5d2842.chunk.js","mappings":"2RAOaA,EAAmB,WAAO,IAAD,IAC1BC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAyBE,EAAAA,EAAAA,UAAS,MAAlC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE2BC,EAAAA,EAAAA,IAASR,GAFpC,OAEcG,EAFd,OAGQC,EAAQD,GAHhB,wGADY,uBAAC,WAAD,wBAOZM,KACD,CAACT,KAGA,6BACI,SAAC,EAAAU,KAAD,CAAMC,GAAE,iBAAEN,QAAF,IAAEA,GAAF,UAAEA,EAAUO,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAnC,qBACCV,IACG,UAAC,EAAAW,QAAD,YACI,SAAC,EAAAC,MAAD,CACIC,IAAK,mCAAqCb,EAAKc,YAC/CC,IAAKf,EAAKgB,SAEd,UAAC,EAAAC,YAAD,YACI,UAAC,EAAAC,UAAD,WAAYlB,EAAKgB,MAAjB,KAA0BhB,EAAKmB,aAAaC,OAAO,EAAG,GAAtD,QACA,UAAC,EAAAC,KAAD,0BAAuC,GAApBrB,EAAKsB,aAAxB,QACA,SAAC,EAAAC,OAAD,wBACA,SAAC,EAAAF,KAAD,UAAOrB,EAAKwB,YACZ,SAAC,EAAAD,OAAD,qBACCvB,EAAKyB,OAAOC,KAAI,SAAAC,GAAK,OAClB,UAAC,EAAAC,WAAD,WAA4BD,EAAME,MAAK,oBAAtBF,EAAMG,cAMvC,UAAC,EAAAC,WAAD,YACI,SAAC,EAAAC,WAAD,sCACA,SAAC,EAAAzB,KAAD,CAAMC,GAAG,OAAT,mBACA,SAAC,EAAAD,KAAD,CAAMC,GAAG,UAAT,yBAEJ,SAAC,KAAD,S,+ZC9CCyB,EAASC,EAAAA,GAAAA,OAAH,wiBAwBNvB,EAAUuB,EAAAA,GAAAA,QAAH,4CAIPtB,EAAQsB,EAAAA,GAAAA,IAAH,gGAMLjB,EAAciB,EAAAA,GAAAA,IAAH,gDAIXhB,EAAYgB,EAAAA,GAAAA,GAAH,oFAMTX,EAASW,EAAAA,GAAAA,GAAH,oFAMNb,EAAOa,EAAAA,GAAAA,KAAH,oFAMJN,EAAaM,EAAAA,GAAAA,KAAH,sHAQVH,EAAaG,EAAAA,GAAAA,KAAH,gEAKVF,EAAaE,EAAAA,GAAAA,GAAH,oFAMV3B,GAAO2B,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gU,iMCzEXE,E,MAAMC,GAAAA,OAAa,CAAEC,QAFf,+BAE6BC,OAAQ,CAAEC,QAHnC,sCAKT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBL,EAAIM,IAAI,uBAD1B,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,IAAMxC,EAAQ,mCAAG,WAAMyB,GAAN,uFACCM,EAAIM,IAAJ,iBAAkBZ,IADnB,cAChBa,EADgB,yBAEfA,EAASC,MAFM,2CAAH,sDAKRE,EAAc,mCAAG,WAAMC,GAAN,uFACLX,EAAIM,IAAJ,6BAA8BK,IADzB,cACtBJ,EADsB,yBAErBA,EAASC,KAAKC,SAFO,2CAAH,sDAKdG,EAAO,mCAAG,WAAMlB,GAAN,uFACEM,EAAIM,IAAJ,gBAAiBZ,EAAjB,aADF,cACfa,EADe,yBAEdA,EAASC,KAAKK,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMpB,GAAN,uFACDM,EAAIM,IAAJ,gBAAiBZ,EAAjB,aADC,cAClBa,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH","sources":["pages/MovieDetailsPage/MovieDetailsPage.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.js","services/movies-api.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\r\nimport { getMovie } from \"services/movies-api\";\r\nimport { Article, Image, Description, ItemTitle,\r\n        Header, Text, TextGenres, Navigation, Additional, Link \r\n        } from './MovieDetailsPage.styled';\r\n\r\nexport const MovieDetailsPage = () => {\r\n    const { movieId } = useParams();\r\n    const [item, setItem ] = useState(null);\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        async function fetchMovie() {\r\n            try {\r\n                const item = await getMovie(movieId);\r\n                setItem(item)\r\n            } catch (error) {}\r\n        }\r\n        fetchMovie();\r\n    }, [movieId]);\r\n\r\n    return (\r\n        <main>\r\n            <Link to={location?.state?.from ?? '/'}>Go back</Link>\r\n            {item && \r\n                <Article>\r\n                    <Image \r\n                        src={'https://image.tmdb.org/t/p/w500/' + item.poster_path}\r\n                        alt={item.title}\r\n                    />\r\n                    <Description>\r\n                        <ItemTitle>{item.title} ({item.release_date.substr(0, 4)})</ItemTitle>\r\n                        <Text>User Score: {item.vote_average * 10}%</Text>\r\n                        <Header>Overview</Header>\r\n                        <Text>{item.overview}</Text>\r\n                        <Header>Genres</Header>\r\n                        {item.genres.map(genre => (\r\n                            <TextGenres key={genre.id}>{genre.name}<br/></TextGenres>\r\n                        ))}\r\n                    </Description>\r\n                </Article>\r\n            }\r\n\r\n            <Navigation>\r\n                <Additional>Additional information</Additional>\r\n                <Link to='cast'>Cast</Link>\r\n                <Link to='reviews'>Reviews</Link>\r\n            </Navigation>\r\n            <Outlet />\r\n        </main>\r\n    )\r\n}","import { NavLink } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  margin-top: 50px;\r\n  padding: 0;\r\n  width: 70px;\r\n  height: 25px;\r\n  border: 1px solid #490936;\r\n  border-radius: 4px;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  align-items: center;\r\n  text-align: center;\r\n  color: #490936;\r\n  text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.55);\r\n  transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.55);\r\n\r\n  &:hover {\r\n    color: #f0e4ec;\r\n    background-color: #490936;\r\n  }\r\n`;\r\n\r\nexport const Article = styled.article`\r\n    display: flex;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    margin-top: 20px;\r\n    max-width: 300px;\r\n    height: fit-content;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n    margin-left: 20px;\r\n`;\r\n\r\nexport const ItemTitle = styled.h2`\r\n  font-size: 26px;\r\n  font-weight: 700;\r\n  color: #490936;\r\n`;\r\n\r\nexport const Header = styled.h3`\r\n  font-size: 20px;\r\n  font-weight: 700;\r\n  color: #490936;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #010501;\r\n`;\r\n\r\nexport const TextGenres = styled.span`\r\n  margin: 0;\r\n  margin-top: 5px;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  color: #010501;\r\n`;\r\n\r\nexport const Navigation = styled.span`\r\n  margin-top: 25px;\r\n  display: block;\r\n`;\r\n\r\nexport const Additional = styled.h3`\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  color: #490936;\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  margin-right: 20px;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  font-size: 18px;\r\n  font-weight: 700; \r\n  color: #010501;;\r\n  text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\r\n  &:hover,\r\n  &.active {\r\n    color: #7b205f;\r\n    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.55);\r\n  }\r\n`;","import axios from 'axios';\r\n\r\nconst api_key = 'cd0301e8d36e75459e8f6b3abbc4f987';\r\nconst URL = 'https://api.themoviedb.org/3';\r\n\r\nconst api = axios.create({ baseURL: URL, params: { api_key } });\r\n\r\nexport async function getTrendingMovies() {\r\n  const response = await api.get('/trending/movie/day');\r\n  return response.data.results;\r\n}\r\n\r\nexport const getMovie = async id => {\r\n  const response = await api.get(`/movie/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getSearchMovie = async query => {\r\n  const response = await api.get(`search/movie?query=${query}`);\r\n  return response.data.results\r\n};\r\n\r\nexport const getCast = async id => {\r\n  const response = await api.get(`movie/${id}/credits`);\r\n  return response.data.cast;\r\n};\r\n\r\nexport const getReviews = async id => {\r\n  const response = await api.get(`movie/${id}/reviews`);\r\n  return response.data.results;\r\n};"],"names":["MovieDetailsPage","movieId","useParams","useState","item","setItem","location","useLocation","useEffect","getMovie","fetchMovie","Link","to","state","from","Article","Image","src","poster_path","alt","title","Description","ItemTitle","release_date","substr","Text","vote_average","Header","overview","genres","map","genre","TextGenres","name","id","Navigation","Additional","Button","styled","NavLink","api","axios","baseURL","params","api_key","getTrendingMovies","get","response","data","results","getSearchMovie","query","getCast","cast","getReviews"],"sourceRoot":""}