{"version":3,"file":"static/js/667.63e3ebdc.chunk.js","mappings":"wSAMaA,EAAa,WACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAAS,MAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAKZ,8GAE+BC,EAAAA,EAAAA,IAAeL,GAF9C,OAEcM,EAFd,OAGQV,EAAUU,GAHlB,0EAKeC,EAAAA,EAAAA,IAAM,CAACC,MAAK,QAL3B,0DALY,sBACPR,GADO,mCAaZS,KAED,CAACT,IAkBJ,OACI,6BACA,UAAC,EAAAU,KAAD,CAAMC,SAlBW,SAAAC,GAGjB,GAFAA,EAAEC,iBAEoB,KAAlBpB,EAAOqB,OACP,OAAOP,EAAAA,GAAAA,MAAY,gCAEvBR,EAAgB,CAAEC,MAAOP,IACzBC,EAAU,KAWV,WACI,SAAC,EAAAqB,MAAD,CAAOC,SARM,SAAAC,GACjB,IAAMC,EAAcD,EAAME,cAAcC,MAAMC,cAC9C3B,EAAUwB,IAMyBE,MAAO3B,EAAQ6B,KAAK,UACnD,SAAC,EAAAC,OAAD,CAAQD,KAAK,SAAb,qBACA,SAAC,KAAD,OAGH3B,IACG,8BACKA,IACG,SAAC,EAAA6B,KAAD,UACK7B,EAAO8B,KAAI,SAAAC,GAAK,OACb,SAAC,EAAAC,KAAD,WACI,SAAC,EAAAC,KAAD,CAAMC,GAAE,UAAKH,EAAMI,IAAMC,MAAO,CAAEC,KAAM9B,GAAxC,SAAoDwB,EAAMO,SADnDP,EAAMI,gB,gPCxDhCpB,EAAOwB,EAAAA,GAAAA,KAAH,+CAIJnB,EAAQmB,EAAAA,GAAAA,MAAH,qRAYLX,EAASW,EAAAA,GAAAA,OAAH,mgBAsBNV,EAAOU,EAAAA,GAAAA,GAAH,uFAMJP,EAAOO,EAAAA,GAAAA,GAAH,+CAIJN,GAAOM,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uN,iMC9CXE,E,MAAMC,GAAAA,OAAa,CAAEC,QAFf,+BAE6BC,OAAQ,CAAEC,QAHnC,sCAKT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBL,EAAInC,IAAI,uBAD1B,cACCK,EADD,yBAEEA,EAASoC,KAAKC,SAFhB,kEAKA,IAAMC,EAAQ,mCAAG,WAAMd,GAAN,uFACCM,EAAInC,IAAJ,iBAAkB6B,IADnB,cAChBxB,EADgB,yBAEfA,EAASoC,MAFM,2CAAH,sDAKRrC,EAAc,mCAAG,WAAML,GAAN,uFACLoC,EAAInC,IAAJ,6BAA8BD,IADzB,cACtBM,EADsB,yBAErBA,EAASoC,KAAKC,SAFO,2CAAH,sDAKdE,EAAO,mCAAG,WAAMf,GAAN,uFACEM,EAAInC,IAAJ,gBAAiB6B,EAAjB,aADF,cACfxB,EADe,yBAEdA,EAASoC,KAAKI,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMjB,GAAN,uFACDM,EAAInC,IAAJ,gBAAiB6B,EAAjB,aADC,cAClBxB,EADkB,yBAEjBA,EAASoC,KAAKC,SAFG,2CAAH","sources":["pages/MoviesPage/MoviesPage.jsx","pages/MoviesPage/MoviesPage.styled.js","services/movies-api.js"],"sourcesContent":["import { getSearchMovie } from 'services/movies-api';\r\nimport { useEffect, useState } from 'react'\r\nimport { useSearchParams, useLocation } from 'react-router-dom';\r\nimport { Form, Input, Button, List, Link, Item } from './MoviesPage.styled';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nexport const MoviesPage = () => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [movies, setMovies] = useState(null)\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const query = searchParams.get('query');\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        if (!query) {\r\n            return;\r\n        }\r\n\r\n        async function fetchSearchMovie() {\r\n            try {\r\n                const response = await getSearchMovie(query);\r\n                setMovies(response);\r\n            } catch(error) {\r\n                return toast({error});\r\n            }\r\n        }\r\n        fetchSearchMovie();\r\n        return\r\n    }, [query])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();        \r\n    \r\n        if (search.trim() === '') {\r\n            return toast.error(\"Search field can't be empty!\");\r\n        }\r\n        setSearchParams({ query: search });\r\n        setSearch('')\r\n        // e.currentTarget.reset();\r\n    }\r\n    \r\n    const handleChange = event => {\r\n        const searchQuery = event.currentTarget.value.toLowerCase();\r\n        setSearch(searchQuery);       \r\n    };\r\n\r\n    return (\r\n        <main>\r\n        <Form onSubmit={handleSubmit}>\r\n            <Input onChange={handleChange} value={search} type=\"text\"></Input>\r\n            <Button type=\"submit\">Search</Button>\r\n            <Toaster />\r\n        </Form>\r\n\r\n        {movies && (\r\n            <>\r\n                {movies && (\r\n                    <List>\r\n                        {movies.map(movie => (\r\n                            <Item key={movie.id}>\r\n                                <Link to={`${movie.id}`} state={{ from: location}}>{movie.title}</Link>\r\n                            </Item>\r\n                        ))}\r\n                    </List>\r\n                \r\n                )}\r\n            </>\r\n        )}\r\n        </main>\r\n    );\r\n}\r\n\r\n\r\n\r\n// import { getSearchMovie } from 'services/movies-api';\r\n// import { useEffect, useState } from 'react'\r\n// import { useSearchParams, useLocation } from 'react-router-dom';\r\n// import { Form, Input, Button, List, Link, Item } from './MoviesPage.styled';\r\n// import toast, { Toaster } from 'react-hot-toast';\r\n\r\n// export const MoviesPage = () => {\r\n//     const [movies, setMovies] = useState([])\r\n//     const [searchParams, setSearchParams] = useSearchParams('');\r\n//     const query = searchParams.get('query');\r\n//     const location = useLocation();\r\n\r\n//     useEffect(() => {\r\n//         if (query === null || query === \"\") {\r\n//             return;\r\n//         }\r\n\r\n//         async function fetchSearchMovie() {\r\n//             try {\r\n//                 const response = await getSearchMovie(query);\r\n//                 setMovies(response);\r\n//             } catch(error) {\r\n//                 console.log('Error');\r\n//             }\r\n//         }\r\n//         fetchSearchMovie();\r\n\r\n//     }, [query])\r\n\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();        \r\n    \r\n//         if (query === '') {\r\n//             return toast.error(\"Search field can't be empty!\");\r\n//         }\r\n//         setSearchParams({ query: e.currentTarget.elements.query.value.trim() });\r\n//         e.currentTarget.reset();;\r\n//     }\r\n    \r\n//     return (\r\n//         <main>\r\n//         <Form onSubmit={handleSubmit}>\r\n//             <Input type=\"text\" name=\"query\"></Input>\r\n//             <Button type=\"submit\">Search</Button>\r\n//             <Toaster />\r\n//         </Form>\r\n\r\n//         {movies && query && (\r\n//             <>\r\n//                 {movies && query && (\r\n//                     <List>\r\n//                         {movies.map(movie => (\r\n//                             <Item key={movie.id}>\r\n//                                 <Link to={`${movie.id}`} state={{ from: location}}>{movie.title}</Link>\r\n//                             </Item>\r\n//                         ))}\r\n//                     </List>\r\n                \r\n//                 )}\r\n//             </>\r\n//         )}\r\n//         </main>\r\n//     );\r\n// }","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Form = styled.form`\r\n    margin-top: 50px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    padding-left: 10px;\r\n    padding-right: 10px;\r\n    margin-right: 20px;\r\n    width: 300px;\r\n    height: 30px;\r\n    border: 1px solid #490936;\r\n    border-radius: 4px;\r\n    background-color: #f5f2f4;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    padding: 0;\r\n    width: 70px;\r\n    height: 32px;\r\n    border: 1px solid #490936;\r\n    border-radius: 4px;\r\n    font-size: 12px;\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    align-items: center;\r\n    text-align: center;\r\n    color: #490936;\r\n    text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.45);\r\n    transition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n\r\n    &:hover {\r\n    color: #f0e4ec;\r\n    background-color: #490936;\r\n    }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    margin-top: 50px;\r\n    padding: 0;\r\n    list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    line-height: 1.6;\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n    color: #010501;\r\n    font-weight: 700;\r\n    text-decoration: none;\r\n\r\n    &:hover,\r\n    &:focus {\r\n        color: #9a5a87;\r\n        text-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n    }\r\n`;","import axios from 'axios';\r\n\r\nconst api_key = 'cd0301e8d36e75459e8f6b3abbc4f987';\r\nconst URL = 'https://api.themoviedb.org/3';\r\n\r\nconst api = axios.create({ baseURL: URL, params: { api_key } });\r\n\r\nexport async function getTrendingMovies() {\r\n  const response = await api.get('/trending/movie/day');\r\n  return response.data.results;\r\n}\r\n\r\nexport const getMovie = async id => {\r\n  const response = await api.get(`/movie/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getSearchMovie = async query => {\r\n  const response = await api.get(`search/movie?query=${query}`);\r\n  return response.data.results\r\n};\r\n\r\nexport const getCast = async id => {\r\n  const response = await api.get(`movie/${id}/credits`);\r\n  return response.data.cast;\r\n};\r\n\r\nexport const getReviews = async id => {\r\n  const response = await api.get(`movie/${id}/reviews`);\r\n  return response.data.results;\r\n};"],"names":["MoviesPage","useState","search","setSearch","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","getSearchMovie","response","toast","error","fetchSearchMovie","Form","onSubmit","e","preventDefault","trim","Input","onChange","event","searchQuery","currentTarget","value","toLowerCase","type","Button","List","map","movie","Item","Link","to","id","state","from","title","styled","NavLink","api","axios","baseURL","params","api_key","getTrendingMovies","data","results","getMovie","getCast","cast","getReviews"],"sourceRoot":""}