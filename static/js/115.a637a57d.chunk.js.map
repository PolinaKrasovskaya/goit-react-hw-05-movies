{"version":3,"file":"static/js/115.a637a57d.chunk.js","mappings":"uLAAaA,EAAS,WAClB,OAAO,0C,8KCMEC,EAAO,WAChB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE8BC,EAAAA,EAAAA,IAAQR,GAFtC,OAEcS,EAFd,OAGQL,EAAUK,GACVH,GAAW,GAJnB,gDAMQI,QAAQC,IAAI,UANpB,yBAQQL,GAAW,GARnB,6EADY,uBAAC,WAAD,wBAYZM,KACD,CAACZ,IAEJU,QAAQC,IAAIR,IAGR,UAAC,EAAAU,KAAD,WACKR,IAAW,SAAC,IAAD,IACXF,EAAOW,KAAI,SAAAC,GAAK,OACb,UAAC,EAAAC,KAAD,YACI,SAAC,EAAAC,MAAD,CAAOC,IAAKH,EAAMI,aACZ,mCAAqCJ,EAAMI,aAC3CC,EAEFC,IAAKN,EAAMO,KACXC,QAAQ,kCAEZ,SAAC,EAAAC,KAAD,UAAOT,EAAMO,QACb,UAAC,EAAAG,KAAD,YAAM,SAAC,EAAAC,OAAD,0BAA6BX,EAAMY,eATlCZ,EAAMa,Y,uOC/BpBf,EAAOgB,EAAAA,GAAAA,GAAH,yFAMJb,EAAOa,EAAAA,GAAAA,GAAH,6IAOJZ,EAAQY,EAAAA,GAAAA,IAAH,8DAKLL,EAAOK,EAAAA,GAAAA,GAAH,0FAMJH,EAASG,EAAAA,GAAAA,KAAH,0FAMNJ,EAAOI,EAAAA,GAAAA,KAAH,2F,iMC3BXC,E,MAAMC,GAAAA,OAAa,CAAEC,QAFf,+BAE6BC,OAAQ,CAAEC,QAHnC,sCAKT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBL,EAAIM,IAAI,uBAD1B,cACC3B,EADD,yBAEEA,EAAS4B,KAAKC,SAFhB,kEAKA,IAAMC,EAAQ,mCAAG,WAAMX,GAAN,uFACCE,EAAIM,IAAJ,iBAAkBR,IADnB,cAChBnB,EADgB,yBAEfA,EAAS4B,MAFM,2CAAH,sDAKRG,EAAc,mCAAG,WAAMC,GAAN,uFACLX,EAAIM,IAAJ,6BAA8BK,IADzB,cACtBhC,EADsB,yBAErBA,EAAS4B,KAAKC,SAFO,2CAAH,sDAKd9B,EAAO,mCAAG,WAAMoB,GAAN,uFACEE,EAAIM,IAAJ,gBAAiBR,EAAjB,aADF,cACfnB,EADe,yBAEdA,EAAS4B,KAAKK,MAFA,2CAAH,sDAKPC,EAAU,mCAAG,WAAMf,GAAN,uFACDE,EAAIM,IAAJ,gBAAiBR,EAAjB,aADC,cAClBnB,EADkB,yBAEjBA,EAAS4B,KAAKC,SAFG,2CAAH,uD","sources":["components/Loader.jsx","pages/Cast/Cast.jsx","pages/Cast/Cast.styled.js","services/movies-api.js"],"sourcesContent":["export const Loader = () => {\r\n    return <div>Loading...</div>;\r\n}","import { useParams } from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getCast } from 'services/movies-api';\r\nimport { List, Item, Image, Header, Text, Name } from './Cast.styled';\r\nimport { Loader } from 'components/Loader';\r\nimport defaultImg from 'images/default.png';\r\n\r\nexport const Cast = () => {\r\n    const { movieId } = useParams();\r\n    const [actors, setActors] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchCast() {\r\n            try {\r\n                const response= await getCast(movieId);\r\n                setActors(response);\r\n                setLoading(true);\r\n            } catch (error) {\r\n                console.log('Error!')\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        }\r\n        fetchCast()\r\n    }, [movieId])\r\n\r\n    console.log(actors);\r\n\r\n    return (\r\n        <List>\r\n            {loading && <Loader/> }\r\n            {actors.map(actor =>\r\n                <Item key={actor.id}>\r\n                    <Image src={actor.profile_path\r\n                        ? 'https://image.tmdb.org/t/p/w500/' + actor.profile_path\r\n                        : defaultImg\r\n                        }\r\n                        alt={actor.name}\r\n                        onerror=\"this.src='images/default.png\"\r\n                    />\r\n                    <Name>{actor.name}</Name>\r\n                    <Text><Header>Character: </Header>{actor.character}</Text>\r\n                </Item>\r\n            )}\r\n        </List>\r\n    )\r\n}","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    list-style: none;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    width: 150px;\r\n    margin-right: 20px;\r\n    margin-top: 20px;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n`;\r\n\r\nexport const Image = styled.img`\r\n    width: 150px;\r\n    height: auto;\r\n`;\r\n\r\nexport const Name = styled.h2`\r\n    font-size: 24px;\r\n    font-weight: 700;\r\n    color: #490936;\r\n`;\r\n\r\nexport const Header = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: #010501;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: #010501;\r\n`;\r\n\r\n","import axios from 'axios';\r\n\r\nconst api_key = 'cd0301e8d36e75459e8f6b3abbc4f987';\r\nconst URL = 'https://api.themoviedb.org/3';\r\n\r\nconst api = axios.create({ baseURL: URL, params: { api_key } });\r\n\r\nexport async function getTrendingMovies() {\r\n  const response = await api.get('/trending/movie/day');\r\n  return response.data.results;\r\n}\r\n\r\nexport const getMovie = async id => {\r\n  const response = await api.get(`/movie/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const getSearchMovie = async query => {\r\n  const response = await api.get(`search/movie?query=${query}`);\r\n  return response.data.results\r\n};\r\n\r\nexport const getCast = async id => {\r\n  const response = await api.get(`movie/${id}/credits`);\r\n  return response.data.cast;\r\n};\r\n\r\nexport const getReviews = async id => {\r\n  const response = await api.get(`movie/${id}/reviews`);\r\n  return response.data.results;\r\n};"],"names":["Loader","Cast","movieId","useParams","useState","actors","setActors","loading","setLoading","useEffect","getCast","response","console","log","fetchCast","List","map","actor","Item","Image","src","profile_path","defaultImg","alt","name","onerror","Name","Text","Header","character","id","styled","api","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","getMovie","getSearchMovie","query","cast","getReviews"],"sourceRoot":""}